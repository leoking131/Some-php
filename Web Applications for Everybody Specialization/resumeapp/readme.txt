In this next assignment you will write a simple resume database that support Create, Read, Update, and Delete operations (CRUD). You will also move user information into its own table and link entries between two tables using foreign keys. You will also add some in-browser JavaScript data validation.

Sample solution
You can explore a sample solution for this problem at http://www.wa4e.com/solutions/res-profile/

Resources
There are several resources you might find useful:

Recorded lectures, sample code and chapters from www.wa4e.com:

Review the SQL language
Using PDO in PHP
JavaScript
How to validate a form in JavaScript on StackOverflow.

Documentation from www.php.net on how to use PDO to talk to a database.

General Specifications
Here are some general specifications for this assignment:

You must use the PHP PDO database layer for this assignment.
Your name must be in the title tag of the HTML for all of the pages for this assignment.
All data that comes from the users must be properly escaped using the htmlentities() function in PHP. You do not need to escape text that is generated by your program.
You must follow the POST-Redirect-GET pattern for all POST requests. This means when your program receives and processes a POST request, it must not generate any HTML as the HTTP response to that request. It must use the "header('Location: ...');" function and either "return" or "exit();" to send the location header and redirect the browser to the same or a different page.
All error messages must be "flash-style" messages where the message is passed from a POST to a GET using the SESSION.
Please do not use HTML5 in-browser data validation (i.e. type="number") for the fields in this assignment as we want to make sure you can properly do server side data validation. And in general, even when you do client-side data validation, you should still validate data on the server in case the user is using a non-HTML5 browser.